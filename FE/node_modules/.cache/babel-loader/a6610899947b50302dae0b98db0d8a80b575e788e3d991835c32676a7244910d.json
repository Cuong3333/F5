{"ast":null,"code":"//src/services/api.js\nimport axios from'axios';const API_URL='http://localhost:8000';// URL của backend\n// Hàm đăng nhập\nexport const login=async(username,password)=>{try{const response=await axios.post(`${API_URL}/login`,new URLSearchParams({username:username,password:password}),{headers:{'Content-Type':'application/x-www-form-urlencoded'}});return response.data;}catch(error){console.error('Login failed:',error);throw error;// Ném lỗi ra để xử lý ở component\n}};// Ham đăng ký\nexport const register=async(email,password)=>{try{const response=await axios.post(`${API_URL}/user/`,{// Đảm bảo endpoint đúng\nemail,password});return response.data;}catch(error){var _error$response,_error$response$data;throw new Error(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.detail)||'Registration failed');}};","map":{"version":3,"names":["axios","API_URL","login","username","password","response","post","URLSearchParams","headers","data","error","console","register","email","_error$response","_error$response$data","Error","detail"],"sources":["/www/wwwroot/F5/FE/src/services/api.js"],"sourcesContent":["//src/services/api.js\n\nimport axios from 'axios';\n\nconst API_URL = 'http://localhost:8000'; // URL của backend\n\n// Hàm đăng nhập\nexport const login = async (username, password) => {\n  try {\n    const response = await axios.post(\n      `${API_URL}/login`,\n      new URLSearchParams({\n        username: username,\n        password: password,\n      }),\n      {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    console.error('Login failed:', error);\n    throw error; // Ném lỗi ra để xử lý ở component\n  }\n};\n// Ham đăng ký\n\nexport const register = async (email, password) => {\n  try {\n    const response = await axios.post(`${API_URL}/user/`, { // Đảm bảo endpoint đúng\n      email,\n      password,\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error(error.response?.data?.detail || 'Registration failed');\n  }\n};"],"mappings":"AAAA;AAEA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,OAAO,CAAG,uBAAuB,CAAE;AAEzC;AACA,MAAO,MAAM,CAAAC,KAAK,CAAG,KAAAA,CAAOC,QAAQ,CAAEC,QAAQ,GAAK,CACjD,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAL,KAAK,CAACM,IAAI,CAC/B,GAAGL,OAAO,QAAQ,CAClB,GAAI,CAAAM,eAAe,CAAC,CAClBJ,QAAQ,CAAEA,QAAQ,CAClBC,QAAQ,CAAEA,QACZ,CAAC,CAAC,CACF,CACEI,OAAO,CAAE,CACP,cAAc,CAAE,mCAClB,CACF,CACF,CAAC,CACD,MAAO,CAAAH,QAAQ,CAACI,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,eAAe,CAAEA,KAAK,CAAC,CACrC,KAAM,CAAAA,KAAK,CAAE;AACf,CACF,CAAC,CACD;AAEA,MAAO,MAAM,CAAAE,QAAQ,CAAG,KAAAA,CAAOC,KAAK,CAAET,QAAQ,GAAK,CACjD,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAL,KAAK,CAACM,IAAI,CAAC,GAAGL,OAAO,QAAQ,CAAE,CAAE;AACtDY,KAAK,CACLT,QACF,CAAC,CAAC,CACF,MAAO,CAAAC,QAAQ,CAACI,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,KAAAI,eAAA,CAAAC,oBAAA,CACd,KAAM,IAAI,CAAAC,KAAK,CAAC,EAAAF,eAAA,CAAAJ,KAAK,CAACL,QAAQ,UAAAS,eAAA,kBAAAC,oBAAA,CAAdD,eAAA,CAAgBL,IAAI,UAAAM,oBAAA,iBAApBA,oBAAA,CAAsBE,MAAM,GAAI,qBAAqB,CAAC,CACxE,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}