{"ast":null,"code":"import{useState,useEffect}from'react';export const useTodo=()=>{const[input,setInput]=useState('');const[tasks,setTasks]=useState([]);// Load tasks from localStorage on mount\nuseEffect(()=>{const storedTasks=localStorage.getItem('tasks');if(storedTasks){setTasks(JSON.parse(storedTasks));}},[]);// Save tasks to localStorage on tasks change\nuseEffect(()=>{localStorage.setItem('tasks',JSON.stringify(tasks));},[tasks]);const addTask=()=>{if(input.trim()===''){alert('You must write something');}else{setTasks(prevTasks=>[...prevTasks,{text:input,completed:false}]);setInput('');}};const toggleTask=index=>{setTasks(prevTasks=>prevTasks.map((task,i)=>i===index?{...task,completed:!task.completed}:task));};const removeTask=index=>{setTasks(prevTasks=>prevTasks.filter((_,i)=>i!==index));};return{input,setInput,tasks,addTask,toggleTask,removeTask};};","map":{"version":3,"names":["useState","useEffect","useTodo","input","setInput","tasks","setTasks","storedTasks","localStorage","getItem","JSON","parse","setItem","stringify","addTask","trim","alert","prevTasks","text","completed","toggleTask","index","map","task","i","removeTask","filter","_"],"sources":["/www/wwwroot/F5/FE/src/hooks/useTodo.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nexport const useTodo = () => {\n  const [input, setInput] = useState('');\n  const [tasks, setTasks] = useState([]);\n\n  // Load tasks from localStorage on mount\n  useEffect(() => {\n    const storedTasks = localStorage.getItem('tasks');\n    if (storedTasks) {\n      setTasks(JSON.parse(storedTasks));\n    }\n  }, []);\n\n  // Save tasks to localStorage on tasks change\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]);\n\n  const addTask = () => {\n    if (input.trim() === '') {\n      alert('You must write something');\n    } else {\n      setTasks(prevTasks => [\n        ...prevTasks,\n        { text: input, completed: false }\n      ]);\n      setInput('');\n    }\n  };\n\n  const toggleTask = (index) => {\n    setTasks(prevTasks => \n      prevTasks.map((task, i) => \n        i === index ? { ...task, completed: !task.completed } : task\n      )\n    );\n  };\n\n  const removeTask = (index) => {\n    setTasks(prevTasks => prevTasks.filter((_, i) => i !== index));\n  };\n\n  return {\n    input,\n    setInput,\n    tasks,\n    addTask,\n    toggleTask,\n    removeTask,\n  };\n};\n"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAE3C,MAAO,MAAM,CAAAC,OAAO,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGJ,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACK,KAAK,CAAEC,QAAQ,CAAC,CAAGN,QAAQ,CAAC,EAAE,CAAC,CAEtC;AACAC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAM,WAAW,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CACjD,GAAIF,WAAW,CAAE,CACfD,QAAQ,CAACI,IAAI,CAACC,KAAK,CAACJ,WAAW,CAAC,CAAC,CACnC,CACF,CAAC,CAAE,EAAE,CAAC,CAEN;AACAN,SAAS,CAAC,IAAM,CACdO,YAAY,CAACI,OAAO,CAAC,OAAO,CAAEF,IAAI,CAACG,SAAS,CAACR,KAAK,CAAC,CAAC,CACtD,CAAC,CAAE,CAACA,KAAK,CAAC,CAAC,CAEX,KAAM,CAAAS,OAAO,CAAGA,CAAA,GAAM,CACpB,GAAIX,KAAK,CAACY,IAAI,CAAC,CAAC,GAAK,EAAE,CAAE,CACvBC,KAAK,CAAC,0BAA0B,CAAC,CACnC,CAAC,IAAM,CACLV,QAAQ,CAACW,SAAS,EAAI,CACpB,GAAGA,SAAS,CACZ,CAAEC,IAAI,CAAEf,KAAK,CAAEgB,SAAS,CAAE,KAAM,CAAC,CAClC,CAAC,CACFf,QAAQ,CAAC,EAAE,CAAC,CACd,CACF,CAAC,CAED,KAAM,CAAAgB,UAAU,CAAIC,KAAK,EAAK,CAC5Bf,QAAQ,CAACW,SAAS,EAChBA,SAAS,CAACK,GAAG,CAAC,CAACC,IAAI,CAAEC,CAAC,GACpBA,CAAC,GAAKH,KAAK,CAAG,CAAE,GAAGE,IAAI,CAAEJ,SAAS,CAAE,CAACI,IAAI,CAACJ,SAAU,CAAC,CAAGI,IAC1D,CACF,CAAC,CACH,CAAC,CAED,KAAM,CAAAE,UAAU,CAAIJ,KAAK,EAAK,CAC5Bf,QAAQ,CAACW,SAAS,EAAIA,SAAS,CAACS,MAAM,CAAC,CAACC,CAAC,CAAEH,CAAC,GAAKA,CAAC,GAAKH,KAAK,CAAC,CAAC,CAChE,CAAC,CAED,MAAO,CACLlB,KAAK,CACLC,QAAQ,CACRC,KAAK,CACLS,OAAO,CACPM,UAAU,CACVK,UACF,CAAC,CACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}